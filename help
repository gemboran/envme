#!/bin/sh

commit() {
  git status -s
  gum confirm "Stage all?" && git add . || git add $(gum choose $(git status -s | awk '{print $2}') --no-limit --cursor-prefix="[ ] " --selected-prefix="[x] " --unselected-prefix="[ ] ")

  TYPE=$(gum choose "fix" "feat" "docs" "style" "refactor" "test" "chore" "revert")
  test -n "$TYPE" || exit 1
  SCOPE=$(gum input --placeholder "scope")

  # Since the scope is optional, wrap it in parentheses if it has a value.
  test -n "$SCOPE" && SCOPE="($SCOPE)"

  # Pre-populate the input with the type(scope): so that the user may change it
  SUMMARY=$(gum input --value "$TYPE$SCOPE: " --placeholder "Summary of this change")
  DESCRIPTION=$(gum write --placeholder "Details of this change")

  # Commit these changes if user confirms
  gum confirm "Commit changes?" && git commit -m "$SUMMARY" -m "$DESCRIPTION"
}

run() {
  go run main.go $@
}

build() {
  CURRENT_VERSION=$(bin/envme -v | awk '{print $3}')
  go build -o bin/envme -ldflags "-X main.version=$(gum input --placeholder 'v0.0.1' --value=$CURRENT_VERSION)" main.go
}

record() {
  file=$(gum choose $(ls tests/recorder/*.tape))
  vhs $file
  file=$(gum choose $(ls *.gif))
  /usr/bin/open $(pwd)/$file
  confirm && pop -a $file -t 'hakiramadhani@gmail.com' -s 'New TUI Demo' -b 'Hi, Haqi. New demo is ready. I Have attached the demo.'
}

helper() {
  echo "Usage: help <command>"
  echo "Available commands:"
  echo "  commit    Stage and commit changes"
  echo "  run       Run the application"
  echo "  build     Build the application"
  echo "  record    Record a new tape"
}

if [ $# -eq 0 ]; then
  helper
else
  "$@"
fi
